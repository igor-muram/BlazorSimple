@page "/canvas"

@inject IJSRuntime js

@inherits ComponentBase

@inject ViewModel ViewModel


<h1>Canvas</h1>
<canvas id="canvas" width="1000" height="1000"></canvas>


@code {

   bool isDown = false;
   MyGraphic graphic;
   bool shouldrender = true;
   int angle = 0;

   protected override Task OnInitializedAsync()
   {
       graphic = new MyGraphic(js);
       ViewModel.NeedRender.Subscribe(_ => shouldrender = true);
       return base.OnInitializedAsync();
   }

   protected override bool ShouldRender()
   {
       return true;
   }

   protected override async Task OnAfterRenderAsync(bool firstRender)
   {
       if (firstRender)
       {
           await js.InvokeVoidAsync("startup");
       }
       
       await js.InvokeVoidAsync("animateScene");
       StateHasChanged();
       await ViewModel.Render(graphic);
       shouldrender = false;
   }

  // private async Task OnClickCanvas(MouseEventArgs e)
   //{
  //     if (e.Button == 0) await ViewModel.AddPoint.Execute((e.ClientX, e.ClientY));
  // }

}